@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using IdentityModel.Client
@model WorkoutViewModel
@{
    var first = Guid.NewGuid();
    var second = Guid.NewGuid();
}

<div class="container">
    <h1>Add Workout</h1>
    <div class="text-lg-center">
        <div class="form-group row">
            <label class="col-sm-4 col-form-label">Workout Types</label>
            <div class="col-sm-5">
                <form id="SelectionForm" asp-action="WorkoutTypeChanged" method="post">
                    @Html.DropDownListFor(m => m.SelectedWorkoutType,
                        Model.WorkoutTypes.Select(wk => new SelectListItem(wk.Name, wk.Id.ToString())),
                        "",
                        new { Class = "form-control", onchange = "HandleSelection()" })
                </form>
            </div>
        </div>
    </div>
    <form asp-action="AddWorkout" method="post">
        <div class="text-lg-center">
            <div class="form-group row">
                <label class="col-sm-4 col-form-label">Date</label>
                <div class="col-sm-5">
                    <input type="date" name="Model.Created" class="form-control" 
                           max="@DateTime.Today"
                           value="@Model.Created"/>
                </div>
            </div>
            @foreach (var field in Model.Fields)
            {
                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">@field.Key</label>
                    @*@Html.LabelFor(wk => field.Key, field.Key, new { Class = "col-sm-4 col-form-label" })*@
                    <div class="col-sm-4">
                        <input type="hidden" name="Model.Fields[@field.Key].Key" value="@field.Key" />
                        <input type="text" name="Model.Fields[@field.Key].Value" value="@field.Value" class="form-control" />
                        <input type="hidden" name="Model.Fields.Index" value="@field.Key" />
                        @*@Html.TextBoxFor(wk => field.Key, field.Value.ToString(), new { Class = "form-control random" })*@
                    </div>
                </div>
            }
            <input type="hidden" name="Model.SelectedWorkoutType" value="@Model.SelectedWorkoutType" />
            <input type="hidden" name="Model.UserId" value="@Model.UserId" />
            <div class="col-sm-12 text-center">
                <button id="btnAddWorkout" class="btn btn-success">Add</button>
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    function HandleSelection() {
        var form = document.getElementById("SelectionForm");
        form.submit();
    }
</script>